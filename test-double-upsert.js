const axios = require('axios');

async function simulateOwnerLogin() {
  try {
    console.log('üîë SIMULANDO LOGIN DE OWNER: Probando el doble upsert');
    console.log('='.repeat(60));
    
    const userData = {
      uid: 'wCbrqW55oMXYLpMXOWMpn1l4TED2',
      displayName: 'JACK Al. JIM√âNEZ',
      email: 'jackzhj34@gmail.com'
    };
    
    // 1. Primer upsert como owner (como hace login.js)
    console.log('1Ô∏è‚É£ Upsert como OWNER...');
    const ownerResponse = await axios.post('http://localhost:3000/api/users/upsert', {
      ...userData,
      role: 'owner'
    }, {
      headers: { 'Content-Type': 'application/json' },
      timeout: 10000
    });
    
    console.log('‚úÖ Owner upsert exitoso:', ownerResponse.data.message);
    
    // 2. Segundo upsert como customer (nueva l√≥gica)
    console.log('\n2Ô∏è‚É£ Upsert como CUSTOMER...');
    const customerResponse = await axios.post('http://localhost:3000/api/users/upsert', {
      ...userData,
      role: 'customer'
    }, {
      headers: { 'Content-Type': 'application/json' },
      timeout: 10000
    });
    
    console.log('‚úÖ Customer upsert exitoso:', customerResponse.data.message);
    
    console.log('\nüìä VERIFICANDO ESTADO FINAL...');
    
    // Ahora verificar que el usuario est√© en ambas colecciones
    // Simulamos la verificaci√≥n llamando a nuestro script
    console.log('Ejecutando verificaci√≥n...');
    
  } catch (error) {
    console.error('‚ùå Error:');
    
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    } else if (error.request) {
      console.error('No se recibi√≥ respuesta:', error.request);
    } else {
      console.error('Error de configuraci√≥n:', error.message);
    }
  }
}

simulateOwnerLogin();
